{{#if infoMessage}}
<p class="alert alert-success">{{infoMessage}}</p>
{{/if}}

{{#if errorMessage}}
<p class="alert alert-danger">{{errorMessage}}</p>
{{/if}}

{{#if products}}

<div class="m-2">
  {{firstName}} {{lastName}}'s Cart
</div>

<table class="table container-fluid" id="customer-cart">
  <thead class="thead-light">
    <tr>
      <th scope="col">Product</th>
      <th scope="col">Quantity</th>
      <th scope="col">Price/kg</th>
      <th scope="col">Subtotal</th>
      <th scope="col">Remove</th>
    </tr>
  </thead>

  <tbody>
    {{#each products }}
    <tr class="product">
      <td> {{ productId.name}} </td>
      {{!-- <td> <input name="quantity" value={{quantity}} /> </td> --}}
      <td>
        <div>
          {{!-- <a class="btn btn-primary" href='/cart/incProduct/{{productId.productId}}'> - </a> --}}
          <button class="btn btn-primary decQty" onclick=decQuantity("{{productId ._id}}",{{ quantity}})> -
          </button>
          <span class="quantity"> {{ quantity}} </span>
          <button class="btn btn-primary incQty" onclick=incQuantity("{{productId._id}}")> + </button>
        </div>
      </td>
      <td>€ <span class="price">{{productId.price}}</span></td>
      <td> <span id="subtotal">111</span></td>
      <td> <button class="btn btn-danger" onclick=deleteProduct("{{productId._id}}")> X</button>
        <input type="hidden" id="productId" name="productId" value={{productId._id}}>
      </td>
    </tr>
    {{/each}}

  </tbody>
  <tfoot onload="calculateBill">
    <tr>
      <th colspan="3">Total :</th>
      <td>€ <span id="total"> </span></td>
    </tr>
  </tfoot>
</table>
<button class="btn btn-primary" id="check-out" type="submit"> Check Out </button>

{{/if}}
<a class="btn btn-primary" href="/shop/"> Back to Shop </a>

{{#if products}}
<script>

  window.onload = function () {
    calculateBill();
    calcSubtotal();
  }

  /**==========================================
  *  triggers when "delete" button is clicked 
  * ==========================================
  */
  const deleteProduct = id => {
    //confirmation of deletion
    let confirmRes = confirm("Do you want to delete product from the cart ?");
    if (confirmRes == false) {
      return;
    } else {
      console.log("DELETE PRODUCT CLICKED")
      // console.log(id)
      const urlId = `http://localhost:3000/cart/deleteProduct/${id}`;
      console.log(urlId)

      axios
        .delete(urlId)
        .then(response => {
          console.log(" response from server ");
          console.log(response.data);
          console.log(response);
          if (response.data.length === 0) {
            console.log(" no products in cart ")
            document.getElementById('customer-cart').textContent = "";
            document.getElementById('check-out').style.display = 'none';

          } else {
            let productRow = "";
            response.data.forEach(product => {
              console.log(product);
              productRow += `<tr class="product">
                           <td> ${product.name} </td>
                           <td>
                           <div>
                          <button class="btn btn-primary decQty"  
                              onclick=decQuantity("${product._id}",${product.quantity})> - </button>
                          <span class="quantity"> ${product.quantity} </span>
                          <button class="btn btn-primary incQty" onclick=incQuantity("${product._id}")> + </button>
                        </div>
                        </td>
                        <td> € <span class="price"> ${product.price}  </span> </td>
                        <td> <span id="subtotal">111</span></td>
                        <td>  <button class="btn btn-danger" onclick=deleteProduct("${product._id}")> X </button>
                              <input type="hidden" id="productId" name="productId" value="${product._id}">                       
                        </td>
                        </tr>`;
            });
            document.querySelector('#customer-cart tbody').innerHTML = productRow;
            calculateBill();
          }
        })
        .catch(err => console.log(`Err while deleting product: ${err}`));
    }

  };

  /** ==========================================
  *  triggers when "+" button is clicked  for quantity
  * ==========================================
  */
  const incQuantity = id => {
    // increase the quantity

    const urlId = `http://localhost:3000/cart/incQty/${id}`;
    axios
      .get(urlId)
      .then(response => {
        console.log(response);
        console.log(response.data[0].quantity);
        let allProducts = document.querySelectorAll('.product');
        Array.from(allProducts).forEach(ele => {
          console.log(ele.querySelector('input').value, ele.querySelector('span').textContent)
          if (id == ele.querySelector('input').value) {

            ele.querySelector(`.decQty`).setAttribute('onclick', `decQuantity( "${id}","${response.data[0].quantity}" )`);
            ele.querySelector('.quantity').textContent = response.data[0].quantity;
          }

        });
        calculateBill();
        calcSubtotal();
      })
      .catch(err => console.log(`Err while increasing product quantity: ${err}`));
  };


  /**==========================================
  * 
  *  calculates the total cost of the cart items: 
  * ==========================================
   */


  const calculateBill = () => {
    console.log(" calculateBill  called ---- ");
    let totalCost = 0;
    document.querySelectorAll("#customer-cart tbody .product").forEach(ele => {
      const qty = ele.getElementsByClassName("quantity")[0].innerText;
      const price = ele.getElementsByClassName("price")[0].innerText;
      totalCost += (qty * price);
    });
    console.log(totalCost);
    document.getElementById("total").innerText = totalCost.toFixed(2);

  }

    /**==========================================
  * 
  *  calculates the subtotal of each product in the cart: 
  * ==========================================
   */


  const calcSubtotal = () => {
    console.log(" calcSubtotal  called ---- ");
    let subtotal = 0;
      const elements = document.querySelectorAll("#customer-cart tbody .product")
      elements.forEach(ele => {
      let qty = ele.getElementsByClassName("quantity")[0].innerText;
      console.log(qty)
      let price = ele.getElementsByClassName("price")[0].innerText;
      console.log(price)
      subtotal = (qty * price);
      console.log(`SUBTOTAL ${subtotal}`)
      let sub = document.getElementById("subtotal").innerText
      console.log(`SUB ${sub}`)

    })    
  }


  /**==========================================
  * 
  *  triggers when "-" button is clicked  for quantity
  * ==========================================
   */
  const decQuantity = (id, qty) => {
    console.log(qty);
    if (qty <= 1) {
      alert("Minimum quantity should be 1 !!");
      return;
    }
    // decreases the quantity

    const urlId = `http://localhost:3000/cart/decQty/${id}`;
    console.log(urlId)
    axios
      .get(urlId)
      .then(response => {
        console.log(response);
        console.log(response.data[0].quantity);
        let allProducts = document.querySelectorAll('.product');
        Array.from(allProducts).forEach(ele => {
          //console.log(ele.querySelector('input').value, ele.querySelector('span').textContent)
          if (id == ele.querySelector('input').value) {
            ele.querySelector('.quantity').textContent = response.data[0].quantity;
            ele.querySelector(`.decQty`).setAttribute('onclick', `decQuantity( "${id}","${response.data[0].quantity}" )`);
          }

        });
        calculateBill();
        calcSubtotal();
        
      })
      .catch(err => console.log(`Error while decreasing product quantity: ${err}`));
  };

</script>

{{/if}}