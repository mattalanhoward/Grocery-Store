<section>
{{#if infoMessage}}
<p class="alert alert-success">{{infoMessage}}</p>
{{/if}}

{{#if errorMessage}}
<p class="alert alert-danger">{{errorMessage}}</p>
{{/if}}

{{#if products}}

<div class="m-2" id="cart-alert"> </div>


<div class="m-2 text-center" id="cart-alert"> </div>

<table class="table container-fluid" id="customer-cart">
  <thead class="thead-light">
    <tr>
      <th scope="col">Product</th>
      <th scope="col">Quantity</th>
      <th scope="col">Price/kg</th>
      <th scope="col">Subtotal</th>
      <th scope="col">Remove</th>
    </tr>
  </thead>

  <tbody>
    {{#each products }}
    <tr class="product">
      <td> {{ productId.name}} </td>
      <td>
        <div>
          <button class="btn btn-primary decQty" onclick=decQuantity("{{productId ._id}}",{{ quantity}})> -
          </button>
          <span class="quantity"> {{ quantity}} </span>
          <button class="btn btn-primary incQty" onclick=incQuantity("{{productId._id}}")> + </button>
        </div>
      </td>
      <td>€ <span class="price">{{productId.price}}</span></td>
      <td> <span class="subtotal"></span></td>
      <td> <button class="btn btn-danger" onclick=deleteProduct("{{productId._id}}")> X</button>
        <input type="hidden" id="productId" name="productId" value={{productId._id}}>
      </td>
    </tr>
    {{/each}}

  </tbody>

  <tfoot onload="calculateBill">
    <tr>
      <td>Total :</td>
      <td></td>
      <td></td>
      <td>€ <span id="total"> </span></td>
      <td></td>
    </tr>
  </tfoot>
</table>

<div class="text-center m-3">
  <a class="btn btn-primary" href="/cart/check-out/{{cartId}}"> Place Order </a>
  {{/if}}
  <a class="btn btn-primary" href="/shop/"> Back to Shop </a>

  {{#if products}}
</div>
</section>


<script>

  window.onload = function () {
    calculateBill();
    calcSubtotal();
  }

  /**==========================================
  *  triggers when "delete" button is clicked and gives a confrimation message 
  * ==========================================
  */
  const deleteProduct = id => {
    console.log("deleteProduct clicked --")
    //confirmation of deletion
    let delAlert = ` <p class="alert alert-danger" id="cart-alert-msg"> Do you want to delete product from the cart ?
                      <button  class="btn btn-primary"   onclick=delConfirmed("${id}")> YES </button>
                      <button  class="btn btn-primary"  onclick="clearAlert()"> NO </button>
                       </p>  ` ;
    document.getElementById("cart-alert").innerHTML = delAlert;
  }

  /**==========================================
  *  triggers when "delete" confirmation is done    
  * ==========================================
  */
  const delConfirmed = id => {

    clearAlert();
    let urlId = `{{envUrl}}/cart/deleteProduct/${id}`;
    console.log(urlId);
    axios
      .delete(urlId)
      .then(response => {
        console.log(" response from server ");
        console.log(response.data);
        // console.log(response);
        if (response.data.length === 0) {
          console.log(" no products in cart ")
          document.getElementById('customer-cart').textContent = "";
          document.getElementById('check-out').style.display = 'none';

        } else {
          let productRow = "";
          response.data.prodList.forEach(product => {
            console.log(product);
            productRow += `<tr class="product">
                           <td> ${product.name} </td>
                           <td>
                           <div>
                          <button class="btn btn-primary decQty"  
                              onclick=decQuantity("${product._id}",${product.quantity})> - </button>
                          <span class="quantity"> ${product.quantity} </span>
                          <button class="btn btn-primary incQty" onclick=incQuantity("${product._id}")> + </button>
                        </div>
                        </td>
                        <td> € <span class="price"> ${product.price}  </span> </td>
                        <td> <span class="subtotal"> </span></td>
                        <td>  <button class="btn btn-danger" onclick=deleteProduct("${product._id}")> X </button>
                              <input type="hidden" id="productId" name="productId" value="${product._id}">                       
                        </td>
                        </tr>`;
          });
          document.querySelector('#customer-cart tbody').innerHTML = productRow;
          calculateBill();
          calcSubtotal();
          document.getElementById("cart-cntr").innerText = response.data.cartCnt;
        }
      })
      .catch(err => console.log(`Err while deleting product: ${err}`));

  };


  /* =====================================
  *  Clears the alert message 
  *  =========================================
  */
  const clearAlert = () => {
    document.getElementById("cart-alert-msg").style.display = 'none';
    document.getElementById("cart-alert").innerText = "";
  }

  /** ==========================================
  *  triggers when "+" button is clicked  for quantity
  * ==========================================
  */
  const incQuantity = id => {

    //const urlId = `http://localhost:3000/cart/incQty/${id}`;
    const urlId = `{{envUrl}}/cart/incQty/${id}`;
    axios
      .get(urlId)
      .then(response => {
        // console.log(response.data.retProduct)
        let allProducts = document.querySelectorAll('.product');
        Array.from(allProducts).forEach(ele => {
          if (id == ele.querySelector('input').value) {
            ele.querySelector(`.decQty`).setAttribute('onclick', `decQuantity( "${id}","${response.data.retProduct[0].quantity}" )`);
            ele.querySelector('.quantity').textContent = response.data.retProduct[0].quantity;
          }
        });
        calculateBill();
        calcSubtotal();

        document.getElementById("cart-cntr").innerText = response.data.cartCnt;
      })
      .catch(err => console.log(`Err while increasing product quantity: ${err} `));
  };


  /**==========================================
  * 
  *  calculates the total cost of the cart items: 
  * ==========================================
   */
  const calculateBill = () => {
    let totalCost = 0;
    document.querySelectorAll("#customer-cart tbody .product").forEach(ele => {
      const qty = ele.getElementsByClassName("quantity")[0].innerText;
      const price = ele.getElementsByClassName("price")[0].innerText;
      totalCost += (qty * price);
    });
    document.getElementById("total").innerText = totalCost.toFixed(2);

  }

  /**==========================================
* 
*  calculates the subtotal of each product in the cart: 
* ==========================================
 */
  const calcSubtotal = () => {
    let subtotal = 0;
    const elements = document.querySelectorAll("#customer-cart tbody .product")
    elements.forEach(ele => {
      let qty = ele.getElementsByClassName("quantity")[0].innerText;
      let price = ele.getElementsByClassName("price")[0].innerText;
      subtotal = (qty * price);
      //console.log(`SUBTOTAL ${subtotal} `)
      ele.getElementsByClassName("subtotal")[0].innerText = `€ ${subtotal.toFixed(2)} `

    })
  }


  /**==========================================
  * 
  *  triggers when "-" button is clicked  for quantity
  * ==========================================
   */
  const decQuantity = (id, qty) => {
    // console.log(qty);
    if (qty <= 1) {
      let qtyAlert = ` < p class="alert alert-danger" id = "cart-alert-msg" > Minimum quantity should be 1!!
    < button  class="btn btn-primary"  onclick = "clearAlert()" > OK </button > </p > ` ;
      document.getElementById("cart-alert").innerHTML = qtyAlert;
      return;
    }

    const urlId = `{{envUrl}}/cart/decQty/${id}`;
    console.log(urlId)
    axios
      .get(urlId)
      .then(response => {
        console.log(response.data);
        let allProducts = document.querySelectorAll('.product');
        Array.from(allProducts).forEach(ele => {
          if (id == ele.querySelector('input').value) {
            ele.querySelector('.quantity').textContent = response.data.retProduct[0].quantity;
            ele.querySelector(`.decQty`).setAttribute('onclick', `decQuantity("${id}", "${response.data.retProduct[0].quantity}")`);
          }
        });
        calculateBill();
        calcSubtotal();
        document.getElementById("cart-cntr").innerText = response.data.cartCnt;
      })
      .catch(err => console.log(`Error while decreasing product quantity: ${err}`));
  };

</script>

{{/if}}